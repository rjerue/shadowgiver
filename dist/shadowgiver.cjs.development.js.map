{"version":3,"file":"shadowgiver.cjs.development.js","sources":["../src/utils/index.ts","../src/index.ts"],"sourcesContent":["export function calculate(elevation: number, color?: string) {\n  const shadowOffset = { width: 0, height: 0.5 * elevation };\n  const shadowOpacity = 0.3;\n  const shadowRadius = 0.8 * elevation;\n  const shadowColor = color || 'black';\n  return { shadowOffset, shadowColor, shadowOpacity, shadowRadius };\n}\n\n/**\n * Shadowgiver function returns an object that can be used in a stylesheet as a shadow. This version ONLY returns web box shadow\n * @param elevation Elevation number that you would put on Android, will be translated to a shadow on iOS and web\n * @param color A color for the shadow, not supported on android\n */\nexport function shadowgiver(elevation: number, color?: string) {\n  const shadow = calculate(elevation, color);\n  return webShadow(shadow);\n}\n\nexport function webShadow({\n  shadowOffset,\n  shadowRadius,\n  shadowColor,\n}: ReturnType<typeof calculate>): { boxShadow: string } {\n  return {\n    boxShadow: `${shadowOffset.width}px ${shadowOffset.height}px ${shadowRadius}px ${shadowColor}`,\n  };\n}\n","import { Platform, ViewStyle, ShadowStyleIOS } from 'react-native';\nimport { calculate, webShadow } from './utils';\nexport type ReactNativeShadow =\n  | ShadowStyleIOS\n  | Pick<ViewStyle, 'elevation'>\n  | { boxShadow: string };\n\n/**\n * Shadowgiver function returns an object that can be used in a stylesheet as a shadow\n * @param elevation Elevation number that you would put on Android, will be translated to a shadow on iOS and web\n * @param color A color for the shadow, not supported on android\n */\nexport function shadowgiver(\n  elevation: number,\n  color?: string\n): ReactNativeShadow {\n  const { shadowOffset, shadowOpacity, shadowRadius, shadowColor } = calculate(\n    elevation,\n    color\n  );\n  const output: ReactNativeShadow = Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOpacity,\n      shadowRadius,\n      shadowOffset,\n    },\n    android: {\n      elevation,\n    },\n    web: {\n      boxShadow: webShadow({\n        shadowOffset,\n        shadowOpacity,\n        shadowRadius,\n        shadowColor,\n      }),\n    },\n  });\n\n  return output;\n}\n"],"names":["calculate","elevation","color","shadowOffset","width","height","shadowOpacity","shadowRadius","shadowColor","webShadow","boxShadow","shadowgiver","output","Platform","select","ios","android","web"],"mappings":";;;;SAAgBA,UAAUC,WAAmBC;MACrCC,YAAY,GAAG;IAAEC,KAAK,EAAE,CAAT;IAAYC,MAAM,EAAE,MAAMJ;GAA/C;MACMK,aAAa,GAAG,GAAtB;MACMC,YAAY,GAAG,MAAMN,SAA3B;MACMO,WAAW,GAAGN,KAAK,IAAI,OAA7B;SACO;IAAEC,YAAY,EAAZA,YAAF;IAAgBK,WAAW,EAAXA,WAAhB;IAA6BF,aAAa,EAAbA,aAA7B;IAA4CC,YAAY,EAAZA;GAAnD;;AAGF,SAUgBE;MACdN,oBAAAA;MACAI,oBAAAA;MACAC,mBAAAA;SAEO;IACLE,SAAS,EAAKP,YAAY,CAACC,KAAlB,WAA6BD,YAAY,CAACE,MAA1C,WAAsDE,YAAtD,WAAwEC;GADnF;;;AChBF;;;;;;AAKA,SAAgBG,YACdV,WACAC;mBAEmEF,SAAS,CAC1EC,SAD0E,EAE1EC,KAF0E;MAApEC,0BAAAA;MAAcG,2BAAAA;MAAeC,0BAAAA;MAAcC,yBAAAA;;MAI7CI,MAAM,GAAsBC,oBAAQ,CAACC,MAAT,CAAgB;IAChDC,GAAG,EAAE;MACHP,WAAW,EAAE,OADV;MAEHF,aAAa,EAAbA,aAFG;MAGHC,YAAY,EAAZA,YAHG;MAIHJ,YAAY,EAAZA;KAL8C;IAOhDa,OAAO,EAAE;MACPf,SAAS,EAATA;KAR8C;IAUhDgB,GAAG,EAAE;MACHP,SAAS,EAAED,SAAS,CAAC;QACnBN,YAAY,EAAZA,YADmB;QAEnBG,aAAa,EAAbA,aAFmB;QAGnBC,YAAY,EAAZA,YAHmB;QAInBC,WAAW,EAAXA;OAJkB;;GAXU,CAAlC;SAoBOI,MAAP;;;;;"}