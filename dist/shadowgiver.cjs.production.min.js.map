{"version":3,"file":"shadowgiver.cjs.production.min.js","sources":["../src/utils/index.ts","../src/index.ts"],"sourcesContent":["export function calculate(elevation: number, color?: string) {\n  const shadowOffset = { width: 0, height: 0.5 * elevation };\n  const shadowOpacity = 0.3;\n  const shadowRadius = 0.8 * elevation;\n  const shadowColor = color || 'black';\n  return { shadowOffset, shadowColor, shadowOpacity, shadowRadius };\n}\n\n/**\n * Shadowgiver function returns an object that can be used in a stylesheet as a shadow. This version ONLY returns web box shadow\n * @param elevation Elevation number that you would put on Android, will be translated to a shadow on iOS and web\n * @param color A color for the shadow, not supported on android\n */\nexport function shadowgiver(elevation: number, color?: string) {\n  const shadow = calculate(elevation, color);\n  return webShadow(shadow);\n}\n\nexport function webShadow({\n  shadowOffset,\n  shadowRadius,\n  shadowColor,\n}: ReturnType<typeof calculate>): { boxShadow: string } {\n  return {\n    boxShadow: `${shadowOffset.width}px ${shadowOffset.height}px ${shadowRadius}px ${shadowColor}`,\n  };\n}\n","import { Platform, ViewStyle, ShadowStyleIOS } from 'react-native';\nimport { calculate, webShadow } from './utils';\nexport type ReactNativeShadow =\n  | ShadowStyleIOS\n  | Pick<ViewStyle, 'elevation'>\n  | { boxShadow: string };\n\n/**\n * Shadowgiver function returns an object that can be used in a stylesheet as a shadow\n * @param elevation Elevation number that you would put on Android, will be translated to a shadow on iOS and web\n * @param color A color for the shadow, not supported on android\n */\nexport function shadowgiver(\n  elevation: number,\n  color?: string\n): ReactNativeShadow {\n  const { shadowOffset, shadowOpacity, shadowRadius, shadowColor } = calculate(\n    elevation,\n    color\n  );\n  const output: ReactNativeShadow = Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOpacity,\n      shadowRadius,\n      shadowOffset,\n    },\n    android: {\n      elevation,\n    },\n    web: {\n      boxShadow: webShadow({\n        shadowOffset,\n        shadowOpacity,\n        shadowRadius,\n        shadowColor,\n      }),\n    },\n  });\n\n  return output;\n}\n"],"names":["webShadow","shadowOffset","boxShadow","width","height","shadowRadius","shadowColor","elevation","color","shadowOpacity","calculate","Platform","select","ios","android","web"],"mappings":"oDAkBgBA,SACdC,IAAAA,mBAIO,CACLC,UAAcD,EAAaE,YAAWF,EAAaG,eAJrDC,qBACAC,0CCRAC,EACAC,kBDdwBD,EAAmBC,SAKpC,CAAEP,aAJY,CAAEE,MAAO,EAAGC,OAAQ,GAAMG,GAIxBD,YADHE,GAAS,QACOC,cAHd,GAG6BJ,aAF9B,GAAME,GCawCG,CACjEH,EACAC,GAFMP,IAAAA,aAAcQ,IAAAA,cAAeJ,IAAAA,oBAIHM,WAASC,OAAO,CAChDC,IAAK,CACHP,YAAa,QACbG,cAAAA,EACAJ,aAAAA,EACAJ,aAAAA,GAEFa,QAAS,CACPP,UAAAA,GAEFQ,IAAK,CACHb,UAAWF,EAAU,CACnBC,aAAAA,EACAQ,cAAAA,EACAJ,aAAAA,EACAC,cAnB6CA"}